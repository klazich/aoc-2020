import { getEdges } from '.'

/**
 * Day 20: Part One
 *
 * @export
 * @param {Map<number,string>} data
 * @returns {number}
 */
export default function runner(data) {
  const edges = getEdges(data)
  const matches = new Map()

  for (const [num, sides] of edges.entries()) {
    let matched = 0

    for (const [n, s] of edges.entries()) {
      if (n === num) continue

      sides.forEach((side, i) => {
        const ma = s.indexOf(side)
        const mb = s.indexOf(side.split('').reverse().join(''))
        if (ma >= 0) {
          matched += 1
        }
        if (mb >= 0) {
          matched += 1
        }
      })
    }

    matches.set(num, matched)
  }

  return [...matches.entries()].reduce(
    (prod, [k, v]) => (v === 2 ? prod * k : prod),
    1
  )
}

export const input = `Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...`

export const expected = 20899048083289
